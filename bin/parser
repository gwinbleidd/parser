#!/usr/bin/env ruby

require 'optparse'
require File.expand_path('../config/environment.rb')
require '../lib/config_file'

params = ARGV.getopts('h', 'l', 'i', 'n', 'u')

def help
  puts "usage: #{File.basename(__FILE__)} [-h|-l|-n|-u dictionary_name|-i dictionary_name]\n",
       "  -h = print this message\n",
       "  -l = load existing files\n",
       "  -i = initialize dictionary\n",
       "  -u = unload dictionary\n",
       "  -n = initialize all dictionaries"
end

if params['h']
  help
elsif params['n']
  cf = ConfigFile.new

  cf.config.each do |c, v|
    conf = Configuration.new(c)

    $log.info "Table: #{conf.table[:name]}"
    DictionaryTableMigration.up(conf.table[:name], conf.table[:fields])
    DictionaryUniqConstMigration.up(conf.table) unless conf.table.nil?
  end
elsif params['i']
  filename = ARGV.shift

  conf = Configuration.new(filename)
  abort "You must supply a filename on the command line" unless filename

  $log.info "Table: #{conf.table[:name]}"
  DictionaryTableMigration.up(conf.table[:name], conf.table[:fields])
  DictionaryUniqConstMigration.up(conf.table) unless conf.table.nil?
elsif params['u']
  filename = ARGV.shift

  conf = Configuration.new(filename)
  abort "You must supply a filename on the command line" unless filename
  models = Model.new(conf.table[:dictionary])
  out = OutputFile.new(conf)

  out.start(models)
elsif params['l']
  u = Upload.new
  u.proceed
else
  help
end